# -*- coding: utf-8 -*-
"""Pr√°tica 4 | PO - Localizacao.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MsEZx025HJEQzC-0y4Iy-p3fbuNd9qfJ
"""

# !wget  -N https://www.dropbox.com/s/fb9umc9u485qfae/BASE-PO2.csv?dl=1

from mip import *
import numpy as np
import pandas as pd	

import sys
import math
df = pd.read_csv('BASE-PO2.csv?dl=1')
df

def calc_dists(n, pontos):
    dists = [[0 for i in range(n)] for j in range(n)]
    for i in range(n):
        for j in range(n):
            x1, y1 = pontos[i]
            x2, y2 = pontos[j]
            d = int(math.sqrt((x1 - x2)**2 + (y1 - y2)**2) + 0.5)
            dists[i][j] = d

    return dists

def le_dados(instPath):
    f = open(instPath, "r")
    l = f.readline()
    n, R = int(l.split()[0]), int(l.split()[1])
    l = f.readline()

    pontos = []
    for i in range(n):
        l = f.readline()
        x, y = int(l.split(",")[1]), int(l.split(",")[2])
        pontos.append((x, y))

    f.close()

    return n, R, calc_dists(n, pontos), pontos

def cria_modelo(n, R, dists):
    model = Model(sense=MINIMIZE, solver_name=CBC)

    x = [model.add_var(var_type=BINARY, name=f"x_{i}") for i in range(n)]

    model.objective = xsum(x[i] for i in range(n))
    print(model.objective)
    for i in range(n):
        model += xsum(x[j] for j in range(n) if dists[i][j] <= R) >= 1

    return model

def main():
    n, R, dists, pontos = le_dados("/content/BASE-PO2.csv?dl=1")

    model = cria_modelo(n, R, dists)
    status = model.optimize()

    print("Status = ", status)
    print("Solution value  = ", model.objective_value)

    model.write(f'{sys.argv[1][:-4]}.lp')

    print("Solution:")

    selected = []
    for v in model.vars:
        if v.x > 0.00001:
            print(v.name, " = ", v.x)

main()